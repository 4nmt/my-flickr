{"version":3,"sources":["components/Topbar.js","components/config.js","components/Explore.js","components/Photo.js","components/Tag.js","App.js","serviceWorker.js","index.js"],"names":["Topbar","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","toggle","bind","assertThisInitialized","state","isOpen","text","setState","e","target","value","_this2","react_default","a","createElement","reactstrap_es","color","dark","expand","href","src","style","width","margin","alt","onClick","navbar","className","addonType","history","push","concat","onChange","handleChange","placeholder","Component","withRouter","api_key","myOnSelectImage","window","location","item","photo_id","Explore","photoList","currentPage","page","axios","get","params","method","format","nojsoncallback","per_page","extras","res","toConsumableArray","data","photos","photo","curPage","console","log","react_infinite_scroller_default","pageStart","loadMore","loadItemList","hasMore","loader","key","Gallery_default","enableImageSelection","onClickThumbnail","enableLightbox","rowHeight","images","map","id","url_l","thumbnail","thumbnailWidth","parseInt","width_l","thumbnailHeight","height_l","customOverlay","title","ownername","views","Photo","info","match","url","tagList","avatarUrl","username","description","farm","server","secret","tags","tag","val","Link","to","_content","owner","iconfarm","iconserver","nsid","content","xs","Tag","listPhotos","curTag","isReset","prevProps","index","App","BrowserRouter","components_Topbar","Route","exact","path","component","React","Boolean","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.4e53d075.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport {\n  Collapse,\n  Navbar,\n  NavbarToggler,\n  NavbarBrand,\n  Nav,\n  NavItem,\n  InputGroup,\n  InputGroupAddon,\n  Input,\n  Button\n} from \"reactstrap\";\n\nimport { withRouter } from \"react-router-dom\";\n\nclass Topbar extends Component {\n  constructor(props) {\n    super(props);\n\n    this.toggle = this.toggle.bind(this);\n    this.state = {\n      isOpen: false,\n      text: \"\"\n    };\n  }\n  toggle() {\n    this.setState({\n      isOpen: !this.state.isOpen\n    });\n  }\n\n  handleChange(e) {\n    this.setState({ text: e.target.value });\n  }\n\n  render() {\n    return (\n      <div>\n        <Navbar color=\"dark\" dark expand=\"md\">\n          <NavbarBrand href=\"/\">\n            <img\n              src=\"https://cdn2.techadvisor.co.uk/cmsdata/features/3637023/flickr-thumb_thumb800.png\"\n              style={{ width: \"10%\", margin: \"0\" }}\n              alt=\"logo\"\n            />\n          </NavbarBrand>\n          <NavbarToggler onClick={this.toggle} />\n          <Collapse isOpen={this.state.isOpen} navbar>\n            <Nav className=\"ml-auto\" navbar>\n              <NavItem>\n                <InputGroup>\n                  <InputGroupAddon addonType=\"prepend\">\n                    <Button\n                      onClick={() =>\n                        this.props.history.push(`/tags/${this.state.text}`)\n                      }\n                    >\n                      Search\n                    </Button>\n                  </InputGroupAddon>\n                  <Input\n                    onChange={e => this.handleChange(e)}\n                    value={this.state.text}\n                    placeholder=\"tags\"\n                  />\n                </InputGroup>\n              </NavItem>\n            </Nav>\n          </Collapse>\n        </Navbar>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(Topbar);\n","export const api_key = \"19348203ef2fded44fd56dbcc87aca93\";\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport \"./Explore.css\";\nimport InfiniteScroll from \"react-infinite-scroller\";\nimport { api_key } from \"./config\";\nimport Gallery from \"react-grid-gallery\";\n\nclass Explore extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      photoList: [],\n      currentPage: 1\n    };\n  }\n\n  async loadItemList(page) {\n    try {\n      const res = await axios.get(`https://api.flickr.com/services/rest/`, {\n        params: {\n          api_key: api_key,\n          method: \"flickr.interestingness.getList\",\n          format: \"json\",\n          nojsoncallback: 1,\n          page: page,\n          per_page: 20,\n          extras: \"url_l,owner_name,views,tags\"\n        }\n      });\n\n      this.setState({\n        photoList: [...this.state.photoList, ...res.data.photos.photo],\n        curPage: page\n      });\n    } catch (err) {\n      console.log(\"error\");\n    }\n  }\n\n  render() {\n    return (\n      <InfiniteScroll\n        pageStart={1}\n        loadMore={() => this.loadItemList(this.state.currentPage + 1)}\n        hasMore={this.state.currentPage < 10 ? true : false}\n        loader={\n          <div className=\"loader\" key={0}>\n            Loading ...\n          </div>\n        }\n      >\n        <div>\n          <Gallery\n            enableImageSelection={false}\n            onClickThumbnail={myOnSelectImage}\n            enableLightbox={false}\n            rowHeight={280}\n            images={this.state.photoList.map(photo => {\n              return {\n                photo_id: photo.id,\n                src: photo.url_l,\n                thumbnail: photo.url_l,\n                thumbnailWidth: parseInt(photo.width_l),\n                thumbnailHeight: parseInt(photo.height_l),\n                customOverlay: (\n                  <div className=\"captionStyle\">\n                    <b>{photo.title}</b>\n                    <div>Owner: {photo.ownername}</div>\n                    <div>Views: {photo.views}</div>\n                  </div>\n                )\n              };\n            })}\n          />\n        </div>\n      </InfiniteScroll>\n    );\n  }\n}\n\nfunction myOnSelectImage() {\n  window.location.href = `/photos/${this.props.item.photo_id}`;\n}\n\nexport default Explore;\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport \"./Photo.css\";\nimport { api_key } from \"./config\";\nimport { Jumbotron, Button, Row, Col } from \"reactstrap\";\nimport { Link } from \"react-router-dom\";\n\nclass Photo extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      info: null\n    };\n  }\n\n  async componentDidMount() {\n    try {\n      const res = await axios.get(`https://api.flickr.com/services/rest/`, {\n        params: {\n          api_key: api_key,\n          method: \"flickr.photos.getInfo\",\n          photo_id: this.props.match.params.photo_id,\n          format: \"json\",\n          nojsoncallback: 1\n        }\n      });\n      console.log(res, this.state.info);\n      let info = null;\n      info = res.data.photo;\n      console.log(info);\n\n      this.setState({ info });\n    } catch (err) {\n      console.log(\"error\");\n    }\n  }\n\n  render() {\n    const info = this.state.info;\n    if (!info) return null;\n    let url, tagList, avatarUrl, username, location, description;\n\n    url = `https://farm${info.farm}.staticflickr.com/${info.server}/${\n      info.id\n    }_${info.secret}.jpg`;\n\n    tagList = info.tags.tag.map(val => {\n      return (\n        <Link to={`/tags/${val._content}`}>\n          <Button color=\"secondary\" className=\"tagStyle\">\n            {val._content}\n          </Button>{\" \"}\n        </Link>\n      );\n    });\n\n    avatarUrl = `http://farm${info.owner.iconfarm}.staticflickr.com/${\n      info.owner.iconserver\n    }/buddyicons/${info.owner.nsid}.jpg`;\n\n    username = info.owner.username;\n    location = info.owner.location;\n    description = info.description.content;\n\n    return (\n      <div>\n        <Jumbotron>\n          <img src={url} style={{ width: \"60%\" }} />\n        </Jumbotron>\n        <Row>\n          <Col>\n            <Row>\n              <Col xs=\"4\">\n                <img src={avatarUrl} style={{ width: \"150px\" }} />\n              </Col>\n              <Col xs=\"8\">\n                <b>{username}</b>\n                <div>Location: {location}</div>\n                <p>Description: {description}</p>\n              </Col>\n            </Row>\n            <hr className=\"my-2\" />\n          </Col>\n          <Col>\n            <h3>Tag list:</h3>\n            <hr />\n            {tagList}\n          </Col>\n        </Row>\n      </div>\n    );\n  }\n}\n\nexport default Photo;\n","import React, { Component } from \"react\";\n//import logo from './logo.svg';\nimport axios from \"axios\";\nimport \"./Explore.css\";\nimport InfiniteScroll from \"react-infinite-scroller\";\nimport { api_key } from \"./config\";\nimport Gallery from \"react-grid-gallery\";\n\nclass Tag extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      listPhotos: [],\n      curPage: 1,\n      curTag: \"\"\n    };\n    this.isReset = false;\n  }\n\n  async loadItemList(page) {\n    try {\n      const res = await axios.get(`https://api.flickr.com/services/rest/`, {\n        params: {\n          api_key: api_key,\n          method: \"flickr.photos.search\",\n          format: \"json\",\n          nojsoncallback: 1,\n          tags: this.props.match.params.tag,\n          page: page,\n          per_page: 20,\n          extras: \"url_l,owner_name,views,tags\"\n        }\n      });\n\n      let listPhotos = [...this.state.listPhotos];\n      if (this.isReset) {\n        this.isReset = false;\n        listPhotos = [];\n      }\n      this.setState({\n        listPhotos: [...listPhotos, ...res.data.photos.photo],\n        curPage: page,\n        curTag: this.props.match.params.tag\n      });\n    } catch (err) {\n      console.log(\"error\");\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    // respond to parameter change in scenario 3\n    let oldTag = prevProps.match.params.tag;\n    let newTag = this.props.match.params.tag;\n\n    if (oldTag !== newTag) {\n      this.isReset = true;\n      this.loadItemList(1);\n    }\n  }\n\n  render() {\n    return (\n      <InfiniteScroll\n        pageStart={1}\n        loadMore={() => this.loadItemList(this.state.curPage + 1)}\n        hasMore={this.state.curPage < 10 ? true : false}\n        loader={\n          <div className=\"loader\" key={0}>\n            Loading ...\n          </div>\n        }\n      >\n        <div>\n          <Gallery\n            enableImageSelection={false}\n            onClickThumbnail={myOnSelectImage}\n            rowHeight={280}\n            images={this.state.listPhotos.map((photo, index) => {\n              return {\n                photo_id: photo.id,\n                src: photo.url_l,\n                thumbnail: photo.url_l,\n                thumbnailWidth: photo.width_l,\n                thumbnailHeight: photo.height_l,\n                customOverlay: (\n                  <div className=\"captionStyle\">\n                    <b>{photo.title}</b>\n                    <div>Owner: {photo.ownername}</div>\n                    <div>Views: {photo.views}</div>\n                  </div>\n                )\n              };\n            })}\n          />\n        </div>\n      </InfiniteScroll>\n    );\n  }\n}\n\nfunction myOnSelectImage() {\n  window.location.href = `/photos/${this.props.item.photo_id}`;\n}\n\nexport default Tag;\n","import React from \"react\";\nimport { Container } from \"reactstrap\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\n\nimport \"./App.css\";\nimport Topbar from \"./components/Topbar\";\nimport Explore from \"./components/Explore\";\nimport Photo from \"./components/Photo\";\nimport Tag from \"./components/Tag\";\n\nclass App extends React.Component {\n  render() {\n    return (\n      <Router>\n        <div>\n          <Container>\n            <Topbar />\n            <Route exact path=\"/\" component={Explore} />\n            <Route path=\"/tags/:tag\" component={Tag} />\n            <Route path=\"/photos/:photo_id\" component={Photo} />\n          </Container>\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}