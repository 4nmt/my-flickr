{"version":3,"sources":["config.js","components/browserHistory.js","actions/index.js","components/Topbar.js","reducers/explore.js","reducers/photo.js","reducers/tags.js","reducers/index.js","store/configureStore.js","components/Explore.js","containers/WrapExplore.js","components/Tag.js","containers/WrapTags.js","components/Photo.js","containers/WrapPhoto.js","App.js","serviceWorker.js","index.js"],"names":["api_key","createBrowserHistory","showExplore","page","data","type","showTags","fetchPhoto","id","_ref3","Object","asyncToGenerator","regenerator_default","a","mark","_callee3","dispatch","res","wrap","_context3","prev","next","axios","get","params","method","photo_id","format","nojsoncallback","sent","photo","history","push","concat","t0","console","log","stop","this","_x3","apply","arguments","withRouter","connect","_ref","input","divStype","color","margin","opacity","react_default","createElement","reactstrap_es","dark","expand","href","style","fontWeight","navbar","Link","to","className","addonType","onClick","tagName","value","tag","innerRef","node","placeholder","explore","state","length","undefined","photoList","currentPage","action","objectSpread","toConsumableArray","initState","tags","rootReducer","combineReducers","configureStore","createStore","compose","applyMiddleware","thunk","window","__REDUX_DEVTOOLS_EXTENSION__","myOnSelectImage","store","props","item","Explore","fetchExplore","react_infinite_scroller_default","pageStart","loadMore","hasMore","loader","key","Gallery_default","enableImageSelection","onClickThumbnail","enableLightbox","rowHeight","images","map","src","url_l","thumbnail","thumbnailWidth","parseInt","width_l","thumbnailHeight","height_l","customOverlay","title","ownername","views","_callee","_context","per_page","extras","photos","_x","Tag","_this","fetchTags","match","index","Component","_ref2","_callee2","_context2","_x2","Photo","background","mainImageURL","width","height","backgroundRepeat","backgroundSize","marginTop","xs","avatarImageURL","username","location","description","tagList","val","_content","photoInfo","farm","server","secret","owner","iconfarm","iconserver","nsid","content","App","es","Router","components_Topbar","Route","exact","path","component","WrapExplore","WrapTags","WrapPhoto","Boolean","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.7a30025a.chunk.js","sourcesContent":["export const api_key = \"19348203ef2fded44fd56dbcc87aca93\";\n","import { createBrowserHistory } from \"history\";\nexport default createBrowserHistory();\n","import axios from \"axios\";\nimport { api_key } from \"../config\";\nimport history from \"../components/browserHistory\";\n\nexport const SHOW_PHOTO_DETAILS = \"SHOW_PHOTO_DETAILS\";\nexport const SHOW_EXPLORE = \"SHOW_EXPLORE\";\nexport const SHOW_TAGS = \"SHOW_TAGS\";\nexport const SEARCH_TAGS = \"SEARCH_TAGS\";\n\nexport const showPhotoDetails = data => ({\n  type: SHOW_PHOTO_DETAILS,\n  data\n});\n\nexport const showExplore = (page, data) => ({\n  type: SHOW_EXPLORE,\n  page,\n  data: data\n});\n\nexport const searchTags = tag => ({\n  type: SEARCH_TAGS,\n  tag\n});\n\nexport const showTags = (page, data) => ({\n  type: SHOW_TAGS,\n  page,\n  data: data\n});\n\nexport const redirectTags = tagName => {\n  return dispatch => {\n    dispatch(searchTags(tagName));\n    history.push(`/tags/${tagName}`);\n  };\n};\n\nexport const fetchExplore = page => {\n  return async dispatch => {\n    try {\n      const res = await axios.get(`https://api.flickr.com/services/rest/`, {\n        params: {\n          api_key: api_key,\n          method: \"flickr.interestingness.getList\",\n          format: \"json\",\n          nojsoncallback: 1,\n          page: page,\n          per_page: 20,\n          extras: \"url_l,owner_name,views,tags\"\n        }\n      });\n\n      dispatch(showExplore(page, res.data.photos.photo));\n    } catch (err) {\n      console.log(\"error\");\n    }\n  };\n};\n\nexport const fetchTags = (page, tagName) => {\n  return async dispatch => {\n    try {\n      const res = await axios.get(`https://api.flickr.com/services/rest/`, {\n        params: {\n          api_key: api_key,\n          method: \"flickr.photos.search\",\n          format: \"json\",\n          nojsoncallback: 1,\n          tags: tagName,\n          page: page,\n          per_page: 20,\n          extras: \"url_l,owner_name,views,tags\"\n        }\n      });\n\n      dispatch(showTags(page, res.data.photos.photo));\n    } catch (err) {\n      console.log(\"error\");\n    }\n  };\n};\n\nexport const fetchPhoto = id => {\n  return async dispatch => {\n    try {\n      const res = await axios.get(`https://api.flickr.com/services/rest/`, {\n        params: {\n          api_key: api_key,\n          method: \"flickr.photos.getInfo\",\n          photo_id: id,\n          format: \"json\",\n          nojsoncallback: 1\n        }\n      });\n      dispatch(showPhotoDetails(res.data.photo));\n      history.push(`/photos/${id}`);\n    } catch (err) {\n      console.log(\"error\");\n    }\n  };\n};\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { redirectTags } from \"../actions\";\nimport { Link, withRouter } from \"react-router-dom\";\n\nimport {\n  Navbar,\n  NavbarBrand,\n  Nav,\n  NavItem,\n  InputGroup,\n  InputGroupAddon,\n  Input,\n  Button,\n  NavLink,\n  Row,\n  Col\n} from \"reactstrap\";\n\nconst Topbar = ({ dispatch }) => {\n  let input = \"\";\n  const divStype = {\n    color: \"white\",\n    margin: \"10px\",\n    opacity: \".7\"\n  };\n  return (\n    <Navbar color=\"dark\" dark expand=\"md\">\n      <NavbarBrand href=\"/my-flickr\">\n        {\" \"}\n        <span style={{ color: \"white\", fontWeight: \"bold\" }}>Flickr</span>\n      </NavbarBrand>\n      <Nav navbar>\n        <NavItem>\n          <Link to=\"/my-flickr\">\n            <span style={divStype}>You</span>\n          </Link>\n        </NavItem>\n        <NavItem>\n          <Link to=\"/my-flickr\">\n            <span style={divStype}>Explore</span>\n          </Link>\n        </NavItem>\n        <NavItem>\n          <Link to=\"/my-flickr\">\n            <span style={divStype}>Create</span>\n          </Link>\n        </NavItem>\n        <NavItem>\n          <Link to=\"/my-flickr\">\n            <span style={divStype}>Go</span>\n          </Link>\n        </NavItem>\n      </Nav>\n      <Nav className=\"ml-auto\" navbar>\n        <NavItem>\n          <InputGroup>\n            <InputGroupAddon addonType=\"prepend\">\n              <Button onClick={() => dispatch(redirectTags(input.value))}>\n                Search\n              </Button>\n            </InputGroupAddon>\n            <Input innerRef={node => (input = node)} placeholder=\"tags\" />\n          </InputGroup>\n        </NavItem>\n      </Nav>\n    </Navbar>\n  );\n};\n\nexport default withRouter(connect()(Topbar));\n","import { SHOW_EXPLORE } from \"../actions\";\n\nconst explore = (\n  state = {\n    photoList: [],\n    currentPage: 1\n  },\n  action\n) => {\n  switch (action.type) {\n    case SHOW_EXPLORE:\n      return {\n        ...state,\n        photoList: [...state.photoList, ...action.data],\n        currentPage: action.page\n      };\n    default:\n      return state;\n  }\n};\n\nexport default explore;\n","import { SHOW_PHOTO_DETAILS } from \"../actions\";\n\nconst photo = (state = {}, action) => {\n  switch (action.type) {\n    case SHOW_PHOTO_DETAILS:\n      return { ...action.data };\n    default:\n      return state;\n  }\n};\n\nexport default photo;\n","import { SEARCH_TAGS, SHOW_TAGS } from \"../actions\";\n\nconst initState = {\n  photoList: [],\n  currentPage: 1\n};\n\nconst tags = (state = initState, action) => {\n  switch (action.type) {\n    case SHOW_TAGS:\n      return {\n        ...state,\n        photoList: [...state.photoList, ...action.data],\n        currentPage: action.page\n      };\n    case SEARCH_TAGS:\n      return { ...initState };\n    default:\n      return state;\n  }\n};\n\nexport default tags;\n","import { combineReducers } from \"redux\";\n\nimport explore from \"./explore\";\nimport photo from \"./photo\";\nimport tags from \"./tags\";\n\nconst rootReducer = combineReducers({\n  explore,\n  tags,\n  photo\n});\n\nexport default rootReducer;\n","import { createStore, applyMiddleware, compose } from \"redux\";\nimport rootReducer from \"../reducers\";\nimport thunk from \"redux-thunk\";\n\nfunction configureStore() {\n  return createStore(\n    rootReducer,\n    compose(\n      applyMiddleware(thunk),\n      window.__REDUX_DEVTOOLS_EXTENSION__ &&\n        window.__REDUX_DEVTOOLS_EXTENSION__()\n    )\n  );\n}\n\nexport default configureStore();\n","import React from \"react\";\nimport \"./Explore.css\";\nimport InfiniteScroll from \"react-infinite-scroller\";\nimport Gallery from \"react-grid-gallery\";\nimport store from \"../store/configureStore\";\nimport { fetchPhoto } from \"../actions\";\n\nconst Explore = ({ photoList, currentPage, fetchExplore }) => (\n  <InfiniteScroll\n    pageStart={1}\n    loadMore={() => fetchExplore(currentPage + 1)}\n    hasMore={currentPage < 10 ? true : false}\n    loader={\n      <div className=\"loader\" key={0}>\n        Loading ...\n      </div>\n    }\n  >\n    <div>\n      <Gallery\n        enableImageSelection={false}\n        onClickThumbnail={myOnSelectImage}\n        enableLightbox={false}\n        rowHeight={280}\n        images={photoList.map(photo => {\n          return {\n            photo_id: photo.id,\n            src: photo.url_l,\n            thumbnail: photo.url_l,\n            thumbnailWidth: parseInt(photo.width_l),\n            thumbnailHeight: parseInt(photo.height_l),\n            customOverlay: (\n              <div className=\"captionStyle\">\n                <b>{photo.title}</b>\n                <div>Owner: {photo.ownername}</div>\n                <div>Views: {photo.views}</div>\n              </div>\n            )\n          };\n        })}\n      />\n    </div>\n  </InfiniteScroll>\n);\n\nfunction myOnSelectImage() {\n  store.dispatch(fetchPhoto(this.props.item.photo_id));\n}\n\nexport default Explore;\n","import { connect } from \"react-redux\";\nimport { fetchExplore, fetchPhoto } from \"../actions\";\nimport Explore from \"../components/Explore\";\n\nconst mapStateToProps = state => {\n  return {\n    photoList: state.explore.photoList,\n    currentPage: state.explore.currentPage\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  fetchExplore: page => dispatch(fetchExplore(page)),\n  fetchPhoto: id => dispatch(fetchPhoto(id))\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Explore);\n","import React, { Component } from \"react\";\nimport \"./Explore.css\";\nimport InfiniteScroll from \"react-infinite-scroller\";\nimport Gallery from \"react-grid-gallery\";\nimport store from \"../store/configureStore\";\nimport { fetchPhoto } from \"../actions\";\n\nclass Tag extends Component {\n  render() {\n    return (\n      <InfiniteScroll\n        pageStart={1}\n        loadMore={() =>\n          this.props.fetchTags(\n            this.props.currentPage + 1,\n            this.props.match.params.tag\n          )\n        }\n        hasMore={this.props.currentPage < 10 ? true : false}\n        loader={\n          <div className=\"loader\" key={0}>\n            Loading ...\n          </div>\n        }\n      >\n        <div>\n          <Gallery\n            enableImageSelection={false}\n            onClickThumbnail={myOnSelectImage}\n            rowHeight={280}\n            images={this.props.photoList.map((photo, index) => {\n              return {\n                photo_id: photo.id,\n                src: photo.url_l,\n                thumbnail: photo.url_l,\n                thumbnailWidth: parseInt(photo.width_l),\n                thumbnailHeight: parseInt(photo.height_l),\n                customOverlay: (\n                  <div className=\"captionStyle\">\n                    <b>{photo.title}</b>\n                    <div>Owner: {photo.ownername}</div>\n                    <div>Views: {photo.views}</div>\n                  </div>\n                )\n              };\n            })}\n          />\n        </div>\n      </InfiniteScroll>\n    );\n  }\n}\n\nfunction myOnSelectImage() {\n  store.dispatch(fetchPhoto(this.props.item.photo_id));\n}\n\nexport default Tag;\n","import { connect } from \"react-redux\";\nimport { fetchTags } from \"../actions\";\nimport Tag from \"../components/Tag\";\n\nconst mapStateToProps = state => {\n  return {\n    photoList: state.tags.photoList,\n    currentPage: state.tags.currentPage\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  fetchTags: (page, tagName) => dispatch(fetchTags(page, tagName))\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Tag);\n","import React, { Component } from \"react\";\nimport \"./Photo.css\";\nimport { Jumbotron, Button, Row, Col } from \"reactstrap\";\n\nconst Photo = ({ photo }) => {\n  return (\n    <div>\n      <div\n        style={{\n          background: `url(${photo.mainImageURL})`,\n          width: \"100%\",\n          height: \"400px\",\n          backgroundRepeat: \"no-repeat\",\n          backgroundSize: \"cover\"\n        }}\n      />\n      <Row style={{ marginTop: \"20px\" }}>\n        <Col>\n          <Row>\n            <Col xs=\"4\">\n              <img src={photo.avatarImageURL} style={{ width: \"150px\" }} />\n            </Col>\n            <Col xs=\"8\">\n              <b>{photo.username}</b>\n              <div>Location: {photo.location}</div>\n              <p>Description: {photo.description}</p>\n            </Col>\n          </Row>\n          <hr className=\"my-2\" />\n        </Col>\n        <Col>\n          <h3>Tag list:</h3>\n          <hr />\n          {photo.tagList}\n        </Col>\n      </Row>\n    </div>\n  );\n};\n\nexport default Photo;\n","import { connect } from \"react-redux\";\nimport Photo from \"../components/Photo\";\nimport React, { Component } from \"react\";\nimport { Button } from \"reactstrap\";\nimport { Link } from \"react-router-dom\";\n\nconst mapStateToProps = state => {\n  const photo = state.photo;\n  let tagList = photo.tags.tag.map(val => {\n    return (\n      <Link to={`/tags/${val._content}`}>\n        <Button color=\"secondary\" className=\"tagStyle\">\n          {val._content}\n        </Button>{\" \"}\n      </Link>\n    );\n  });\n\n  let photoInfo = {\n    mainImageURL: `https://farm${photo.farm}.staticflickr.com/${photo.server}/${\n      photo.id\n    }_${photo.secret}.jpg`,\n    avatarImageURL: `http://farm${photo.owner.iconfarm}.staticflickr.com/${\n      photo.owner.iconserver\n    }/buddyicons/${photo.owner.nsid}.jpg`,\n    username: photo.owner.username,\n    location: photo.owner.location,\n    description: photo.description.content,\n    tagList\n  };\n  return {\n    photo: { ...photoInfo }\n  };\n};\n\nexport default connect(mapStateToProps)(Photo);\n","import React from \"react\";\nimport { Container } from \"reactstrap\";\nimport { Router, Route } from \"react-router-dom\";\n\nimport \"./App.css\";\nimport Topbar from \"./components/Topbar\";\nimport WrapExplore from \"./containers/WrapExplore\";\nimport history from \"./components/browserHistory\";\nimport { Provider } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport WrapTags from \"./containers/WrapTags\";\nimport WrapPhoto from \"./containers/WrapPhoto\";\n\nconst App = ({ store }) => (\n  <Provider store={store}>\n    <Router history={history}>\n      <Container>\n        <Topbar />\n        <Route exact path=\"my-flickr/\" component={WrapExplore} />\n        <Route path=\"my-flickr/tags/:tag\" component={WrapTags} />\n        <Route path=\"my-flickr/photos/:photo_id\" component={WrapPhoto} />\n      </Container>\n    </Router>\n  </Provider>\n);\n\nApp.propTypes = {\n  store: PropTypes.object.isRequired,\n  history: PropTypes.object.isRequired\n};\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport store from \"./store/configureStore\";\n\nReactDOM.render(<App store={store} />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}