{"version":3,"sources":["config.js","components/browserHistory.js","actions/index.js","components/Topbar.js","reducers/explore.js","reducers/photo.js","reducers/tags.js","reducers/index.js","store/configureStore.js","components/Explore.js","containers/WrapExplore.js","components/Tag.js","containers/WrapTags.js","components/Photo.js","containers/WrapPhoto.js","App.js","serviceWorker.js","index.js"],"names":["api_key","createBrowserHistory","showExplore","page","data","type","showTags","tag","fetchTags","tagName","_ref2","Object","asyncToGenerator","regenerator_default","a","mark","_callee2","dispatch","res","wrap","_context2","prev","next","axios","get","params","method","format","nojsoncallback","tags","per_page","extras","sent","photos","photo","t0","console","log","stop","this","_x2","apply","arguments","resetTags","_ref3","_callee3","_context3","_x3","fetchPhoto","id","_ref4","_callee4","_context4","photo_id","history","push","concat","_x4","withRouter","connect","_ref","input","divStype","color","margin","opacity","react_default","createElement","reactstrap_es","dark","expand","href","style","fontWeight","navbar","Link","to","className","addonType","onClick","value","innerRef","node","placeholder","explore","state","length","undefined","photoList","currentPage","action","objectSpread","toConsumableArray","initState","currentTag","rootReducer","combineReducers","configureStore","createStore","compose","applyMiddleware","thunk","window","__REDUX_DEVTOOLS_EXTENSION__","myOnSelectImage","store","props","item","Explore","fetchExplore","react_infinite_scroller_default","pageStart","loadMore","hasMore","loader","key","Gallery_default","enableImageSelection","onClickThumbnail","enableLightbox","rowHeight","images","map","src","url_l","thumbnail","thumbnailWidth","parseInt","width_l","thumbnailHeight","height_l","customOverlay","title","ownername","views","_callee","_context","_x","Tag","match","_this","index","Component","ownProps","newTag","getState","shouldFetchPosts","fetchTagsIfNeeded","Photo","background","mainImageURL","width","height","backgroundRepeat","backgroundSize","marginTop","xs","avatarImageURL","alt","username","location","description","tagList","val","_content","photoInfo","farm","server","secret","owner","iconfarm","iconserver","nsid","content","App","es","Router","components_Topbar","Route","exact","path","component","WrapExplore","WrapTags","WrapPhoto","Boolean","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.f28b3408.chunk.js","sourcesContent":["export const api_key = \"19348203ef2fded44fd56dbcc87aca93\";\n","import { createBrowserHistory } from \"history\";\nexport default createBrowserHistory();\n","import axios from \"axios\";\nimport { api_key } from \"../config\";\nimport history from \"../components/browserHistory\";\n\nexport const SHOW_PHOTO_DETAILS = \"SHOW_PHOTO_DETAILS\";\nexport const SHOW_EXPLORE = \"SHOW_EXPLORE\";\nexport const SHOW_TAGS = \"SHOW_TAGS\";\nexport const SEARCH_TAGS = \"SEARCH_TAGS\";\n\nexport const showPhotoDetails = data => ({\n  type: SHOW_PHOTO_DETAILS,\n  data\n});\n\nexport const showExplore = (page, data) => ({\n  type: SHOW_EXPLORE,\n  page,\n  data: data\n});\n\nexport const searchTags = (tag, data) => ({\n  type: SEARCH_TAGS,\n  tag,\n  data\n});\n\nexport const showTags = (page, tag, data) => ({\n  type: SHOW_TAGS,\n  page,\n  tag,\n  data\n});\n\nexport const redirectTags = tagName => {\n  return dispatch => {\n    dispatch(resetTags(tagName));\n    history.push(`/my-flickr/tags/${tagName}`);\n  };\n};\n\nexport const fetchExplore = page => {\n  return async dispatch => {\n    try {\n      // const res = await axios.get(`https://api.flickr.com/services/rest/`, {\n      //   params: {\n      //     api_key: api_key,\n      //     method: \"flickr.interestingness.getList\",\n      //     format: \"json\",\n      //     nojsoncallback: 1,\n      //     page: page,\n      //     per_page: 20,\n      //     extras: \"url_l,owner_name,views,tags\"\n      //   }\n      // });\n      const res = await axios.get(`https://api.flickr.com/services/rest/`, {\n        params: {\n          api_key: api_key,\n          method: \"flickr.photos.search\",\n          format: \"json\",\n          nojsoncallback: 1,\n          tags: \"random\",\n          page: page,\n          per_page: 20,\n          extras: \"url_l,owner_name,views,tags\"\n        }\n      });\n\n      dispatch(showExplore(page, res.data.photos.photo));\n    } catch (err) {\n      console.log(\"error\");\n    }\n  };\n};\n\nexport const fetchTags = (page, tagName) => {\n  return async dispatch => {\n    try {\n      const res = await axios.get(`https://api.flickr.com/services/rest/`, {\n        params: {\n          api_key: api_key,\n          method: \"flickr.photos.search\",\n          format: \"json\",\n          nojsoncallback: 1,\n          tags: tagName,\n          page: page,\n          per_page: 20,\n          extras: \"url_l,owner_name,views,tags\"\n        }\n      });\n\n      dispatch(showTags(page, tagName, res.data.photos.photo));\n    } catch (err) {\n      console.log(\"error\");\n    }\n  };\n};\n\nexport const resetTags = tagName => {\n  return async dispatch => {\n    try {\n      const res = await axios.get(`https://api.flickr.com/services/rest/`, {\n        params: {\n          api_key: api_key,\n          method: \"flickr.photos.search\",\n          format: \"json\",\n          nojsoncallback: 1,\n          tags: tagName,\n          page: 1,\n          per_page: 20,\n          extras: \"url_l,owner_name,views,tags\"\n        }\n      });\n\n      dispatch(searchTags(tagName, res.data.photos.photo));\n    } catch (err) {\n      console.log(\"error\");\n    }\n  };\n};\n\nexport const fetchPhoto = id => {\n  return async dispatch => {\n    try {\n      const res = await axios.get(`https://api.flickr.com/services/rest/`, {\n        params: {\n          api_key: api_key,\n          method: \"flickr.photos.getInfo\",\n          photo_id: id,\n          format: \"json\",\n          nojsoncallback: 1\n        }\n      });\n      dispatch(showPhotoDetails(res.data.photo));\n      history.push(`/my-flickr/photos/${id}`);\n    } catch (err) {\n      console.log(\"error\");\n    }\n  };\n};\n\nfunction shouldFetchPosts(state, newTag) {\n  return state.currentTag === newTag;\n}\n\nexport function fetchTagsIfNeeded(page, newTag) {\n  return (dispatch, getState) => {\n    if (shouldFetchPosts(getState().tags, newTag)) {\n      dispatch(fetchTags(page, newTag));\n    }\n  };\n}\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { redirectTags } from \"../actions\";\nimport { Link, withRouter } from \"react-router-dom\";\n\nimport {\n  Navbar,\n  NavbarBrand,\n  Nav,\n  NavItem,\n  InputGroup,\n  InputGroupAddon,\n  Input,\n  Button\n} from \"reactstrap\";\n\nconst Topbar = ({ dispatch }) => {\n  let input = \"\";\n  const divStype = {\n    color: \"white\",\n    margin: \"10px\",\n    opacity: \".7\"\n  };\n  return (\n    <Navbar color=\"dark\" dark expand=\"md\">\n      <NavbarBrand href=\"/my-flickr\">\n        {\" \"}\n        <span style={{ color: \"white\", fontWeight: \"bold\" }}>Flickr</span>\n      </NavbarBrand>\n      <Nav navbar>\n        <NavItem>\n          <Link to=\"/my-flickr\">\n            <span style={divStype}>You</span>\n          </Link>\n        </NavItem>\n        <NavItem>\n          <Link to=\"/my-flickr\">\n            <span style={divStype}>Explore</span>\n          </Link>\n        </NavItem>\n        <NavItem>\n          <Link to=\"/my-flickr\">\n            <span style={divStype}>Create</span>\n          </Link>\n        </NavItem>\n        <NavItem>\n          <Link to=\"/my-flickr\">\n            <span style={divStype}>Go</span>\n          </Link>\n        </NavItem>\n      </Nav>\n      <Nav className=\"ml-auto\" navbar>\n        <NavItem>\n          <InputGroup>\n            <InputGroupAddon addonType=\"prepend\">\n              <Button onClick={() => dispatch(redirectTags(input.value))}>\n                Search\n              </Button>\n            </InputGroupAddon>\n            <Input innerRef={node => (input = node)} placeholder=\"tags\" />\n          </InputGroup>\n        </NavItem>\n      </Nav>\n    </Navbar>\n  );\n};\n\nexport default withRouter(connect()(Topbar));\n","import { SHOW_EXPLORE } from \"../actions\";\n\nconst explore = (\n  state = {\n    photoList: [],\n    currentPage: 1\n  },\n  action\n) => {\n  switch (action.type) {\n    case SHOW_EXPLORE:\n      return {\n        ...state,\n        photoList: [...state.photoList, ...action.data],\n        currentPage: action.page\n      };\n    default:\n      return state;\n  }\n};\n\nexport default explore;\n","import { SHOW_PHOTO_DETAILS } from \"../actions\";\n\nconst photo = (state = {}, action) => {\n  switch (action.type) {\n    case SHOW_PHOTO_DETAILS:\n      return { ...action.data };\n    default:\n      return state;\n  }\n};\n\nexport default photo;\n","import { SEARCH_TAGS, SHOW_TAGS } from \"../actions\";\n\nconst initState = {\n  photoList: [],\n  currentPage: 1,\n  currentTag: \"\"\n};\n\nconst tags = (state = initState, action) => {\n  switch (action.type) {\n    case SHOW_TAGS:\n      return {\n        ...state,\n        photoList: [...state.photoList, ...action.data],\n        currentPage: action.page,\n        currentTag: action.tag\n      };\n    case SEARCH_TAGS:\n      return {\n        photoList: [...action.data],\n        currentPage: 1,\n        currentTag: action.tag\n      };\n    default:\n      return state;\n  }\n};\n\nexport default tags;\n","import { combineReducers } from \"redux\";\n\nimport explore from \"./explore\";\nimport photo from \"./photo\";\nimport tags from \"./tags\";\n\nconst rootReducer = combineReducers({\n  explore,\n  tags,\n  photo\n});\n\nexport default rootReducer;\n","import { createStore, applyMiddleware, compose } from \"redux\";\nimport rootReducer from \"../reducers\";\nimport thunk from \"redux-thunk\";\n\nfunction configureStore() {\n  return createStore(\n    rootReducer,\n    compose(\n      applyMiddleware(thunk),\n      window.__REDUX_DEVTOOLS_EXTENSION__ &&\n        window.__REDUX_DEVTOOLS_EXTENSION__()\n    )\n  );\n}\n\nexport default configureStore();\n","import React from \"react\";\nimport \"./Explore.css\";\nimport InfiniteScroll from \"react-infinite-scroller\";\nimport Gallery from \"react-grid-gallery\";\nimport store from \"../store/configureStore\";\nimport { fetchPhoto } from \"../actions\";\n\nconst Explore = ({ photoList, currentPage, fetchExplore }) => (\n  <InfiniteScroll\n    pageStart={1}\n    loadMore={() => fetchExplore(currentPage + 1)}\n    hasMore={currentPage < 10 ? true : false}\n    loader={\n      <div className=\"loader\" key={0}>\n        Loading ...\n      </div>\n    }\n  >\n    <div>\n      <Gallery\n        enableImageSelection={false}\n        onClickThumbnail={myOnSelectImage}\n        enableLightbox={false}\n        rowHeight={280}\n        images={photoList.map(photo => {\n          return {\n            photo_id: photo.id,\n            src: photo.url_l,\n            thumbnail: photo.url_l,\n            thumbnailWidth: parseInt(photo.width_l),\n            thumbnailHeight: parseInt(photo.height_l),\n            customOverlay: (\n              <div className=\"captionStyle\">\n                <b>{photo.title}</b>\n                <div>Owner: {photo.ownername}</div>\n                <div>Views: {photo.views}</div>\n              </div>\n            )\n          };\n        })}\n      />\n    </div>\n  </InfiniteScroll>\n);\n\nfunction myOnSelectImage() {\n  store.dispatch(fetchPhoto(this.props.item.photo_id));\n}\n\nexport default Explore;\n","import { connect } from \"react-redux\";\nimport { fetchExplore, fetchPhoto } from \"../actions\";\nimport Explore from \"../components/Explore\";\n\nconst mapStateToProps = state => {\n  return {\n    photoList: state.explore.photoList,\n    currentPage: state.explore.currentPage\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  fetchExplore: page => dispatch(fetchExplore(page)),\n  fetchPhoto: id => dispatch(fetchPhoto(id))\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Explore);\n","import React, { Component } from \"react\";\nimport \"./Explore.css\";\nimport InfiniteScroll from \"react-infinite-scroller\";\nimport Gallery from \"react-grid-gallery\";\nimport store from \"../store/configureStore\";\nimport { fetchPhoto } from \"../actions\";\n\nclass Tag extends Component {\n  componentDidMount() {\n    if (this.props.currentTag !== this.props.match.params.tag) {\n      this.props.resetTags(this.props.match.params.tag);\n    }\n  }\n\n  render() {\n    return (\n      <InfiniteScroll\n        pageStart={0}\n        loadMore={() =>\n          this.props.fetchTags(\n            this.props.currentPage + 1,\n            this.props.match.params.tag\n          )\n        }\n        hasMore={this.props.currentPage < 10 ? true : false}\n        loader={\n          <div className=\"loader\" key={0}>\n            Loading ...\n          </div>\n        }\n      >\n        <div>\n          <Gallery\n            enableImageSelection={false}\n            onClickThumbnail={myOnSelectImage}\n            rowHeight={280}\n            images={this.props.photoList.map((photo, index) => {\n              return {\n                photo_id: photo.id,\n                src: photo.url_l,\n                thumbnail: photo.url_l,\n                thumbnailWidth: parseInt(photo.width_l),\n                thumbnailHeight: parseInt(photo.height_l),\n                customOverlay: (\n                  <div className=\"captionStyle\">\n                    <b>{photo.title}</b>\n                    <div>Owner: {photo.ownername}</div>\n                    <div>Views: {photo.views}</div>\n                  </div>\n                )\n              };\n            })}\n          />\n        </div>\n      </InfiniteScroll>\n    );\n  }\n}\n\nfunction myOnSelectImage() {\n  store.dispatch(fetchPhoto(this.props.item.photo_id));\n}\n\nexport default Tag;\n","import { connect } from \"react-redux\";\nimport { fetchTagsIfNeeded, resetTags } from \"../actions\";\nimport Tag from \"../components/Tag\";\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    photoList: state.tags.photoList,\n    currentPage: state.tags.currentPage,\n    currentTag: state.tags.currentTag\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  fetchTags: (page, tagName) => dispatch(fetchTagsIfNeeded(page, tagName)),\n  resetTags: tagName => dispatch(resetTags(tagName))\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Tag);\n","import React from \"react\";\nimport \"./Photo.css\";\nimport { Row, Col } from \"reactstrap\";\n\nconst Photo = ({ photo }) => {\n  return (\n    <div>\n      <div\n        style={{\n          background: `url(${photo.mainImageURL})`,\n          width: \"100%\",\n          height: \"400px\",\n          backgroundRepeat: \"no-repeat\",\n          backgroundSize: \"cover\"\n        }}\n      />\n      <Row style={{ marginTop: \"20px\" }}>\n        <Col>\n          <Row>\n            <Col xs=\"4\">\n              <img\n                src={photo.avatarImageURL}\n                alt={photo.username}\n                style={{ width: \"150px\" }}\n              />\n            </Col>\n            <Col xs=\"8\">\n              <b>{photo.username}</b>\n              <div>Location: {photo.location}</div>\n              <p>Description: {photo.description}</p>\n            </Col>\n          </Row>\n          <hr className=\"my-2\" />\n        </Col>\n        <Col>\n          <h3>Tag list:</h3>\n          <hr />\n          {photo.tagList}\n        </Col>\n      </Row>\n    </div>\n  );\n};\n\nexport default Photo;\n","import { connect } from \"react-redux\";\nimport Photo from \"../components/Photo\";\nimport React from \"react\";\nimport { Button } from \"reactstrap\";\nimport { Link } from \"react-router-dom\";\n\nconst mapStateToProps = state => {\n  const photo = state.photo;\n  let tagList = photo.tags.tag.map(val => {\n    return (\n      <Link key={val} to={`/my-flickr/tags/${val._content}`}>\n        <Button color=\"secondary\" className=\"tagStyle\">\n          {val._content}\n        </Button>{\" \"}\n      </Link>\n    );\n  });\n\n  let photoInfo = {\n    mainImageURL: `https://farm${photo.farm}.staticflickr.com/${photo.server}/${\n      photo.id\n    }_${photo.secret}.jpg`,\n    avatarImageURL: `http://farm${photo.owner.iconfarm}.staticflickr.com/${\n      photo.owner.iconserver\n    }/buddyicons/${photo.owner.nsid}.jpg`,\n    username: photo.owner.username,\n    location: photo.owner.location,\n    description: photo.description.content,\n    tagList\n  };\n  return {\n    photo: { ...photoInfo }\n  };\n};\n\nexport default connect(mapStateToProps)(Photo);\n","import React from \"react\";\nimport { Container } from \"reactstrap\";\nimport { Router, Route } from \"react-router-dom\";\n\nimport \"./App.css\";\nimport Topbar from \"./components/Topbar\";\nimport WrapExplore from \"./containers/WrapExplore\";\nimport history from \"./components/browserHistory\";\nimport { Provider } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport WrapTags from \"./containers/WrapTags\";\nimport WrapPhoto from \"./containers/WrapPhoto\";\n\nconst App = ({ store }) => (\n  <Provider store={store}>\n    <Router history={history}>\n      <Container>\n        <Topbar />\n        <Route exact path=\"/my-flickr\" component={WrapExplore} />\n        <Route path=\"/my-flickr/tags/:tag\" component={WrapTags} />\n        <Route path=\"/my-flickr/photos/:photo_id\" component={WrapPhoto} />\n      </Container>\n    </Router>\n  </Provider>\n);\n\nApp.propTypes = {\n  store: PropTypes.object.isRequired,\n  history: PropTypes.object.isRequired\n};\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport store from \"./store/configureStore\";\n\nReactDOM.render(<App store={store} />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}